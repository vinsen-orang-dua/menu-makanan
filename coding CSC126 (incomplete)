/* CSC126
Created on: 1/1/2025
Created by: Ethelbert, A.Rahman, Marxamos, Ronny
Purpose: Prepare a more efficient method of ordering. 
         1. List menus
         2. Order taking
         3. Total Purchase Calculation
         4. Display Order details
         5. Calculate Change based on Payment method 
*/

#include <iostream>
#include <string>
#include <iomanip> // for setprecision
#include <cctype>  // for toupper
using namespace std;

// Function Prototypes
void greetings();
void TableMenu();
void Order(string name[], double &tprice, int &i);
void TotalPurchase(double &tprice);
void Output(string name[], double tprice, int i);
void Change(double &tprice);
void adminMenu();
void mainMenu();
string toUpperCase(const string &str);

char userType;

int main()
{
    string name[100]; // Array to store item names
    double tprice = 0.0; // Total price
    int i = 0; // Counter for items

    greetings(); // Welcome and login UI for admin and customer
    mainMenu();

    //Order(name, tprice, i); //Take order from customer
    //TotalPurchase(tprice); //Calculate total price & apply discount
    Output(name, tprice, i); //Display the order details
    Change(tprice); //Handle payment method and calculate change if have
    return 0;
}

// Function: Greetings and Login UI
void greetings()
{
    char key;
    cout << "+----------------------------------------+" << endl;
    cout << "|     WELCOME   TO   CAFE KAPAL LAUD     |" << endl;
    cout << "+----------------------------------------+" << endl;
    cout << "Press any key to continue..." << endl;
    cin >> key;
}

// Function: Main Menu
void mainMenu()
{
    do
    {
        cout << "\n+---------------------------------------+" << endl;
        cout << "| [1] |   Admin Login                   |" << endl;
        cout << "+---------------------------------------+" << endl;
        cout << "| [2] |   Customer Login                |" << endl;
        cout << "+---------------------------------------+" << endl;
        cout << "| [3] |   Exit                          |" << endl;
        cout << "+---------------------------------------+" << endl;
        cout << "Please enter number to continue: ";
        cin >> userType;

        if (userType == '1')
        {
            cout << "Admin login (not implemented yet)." << endl;
        }
        else if (userType == '2')
        {
            TableMenu();
        }
        else if (userType == '3')
        {
            cout << "Exiting... Goodbye!" << endl;
        }
        else
        {
            cout << "Incorrect option. Please try again." << endl;
        }
    } while (userType != '3');
}

// Function: Display Table Menu
void TableMenu()
{
    cout << "+------------------------------------------------------------------------------------------------------------+" << endl;
    cout << "|  Category  |        Food             |      Price        |            |       Beverages       |    Price   |" << endl;
    cout << "|------------|-------------------------|-------------------|------------|-----------------------|------------|" << endl;
    cout << "|   Code     |       [Burger]          |                   |    Code    |    [Minuman Bujang]   |            |" << endl;
    cout << "|------------|-------------------------|-------------------|------------|-----------------------|------------|" << endl;
    cout << "|     A      |         Ayam            |     RM 5.00       |     WJ     |   Watermelon Juice    |   RM 7.00  |" << endl;
    cout << "|------------|-------------------------|-------------------|------------|-----------------------|------------|" << endl;
    cout << "|     AT     |      Ayam + Telur       |     RM 6.00       |     HJ     |    Honeydew Juice     |   RM 8.00  |" << endl;
    cout << "|------------|-------------------------|-------------------|------------|-----------------------|------------|--------------+" << endl;
    cout << "|     ATC    |  Ayam + Telur + Cheese  |     RM 7.00       |            |    [Minuman Lega]     |     Hot    |     Cold     |" << endl;
    cout << "|------------|-------------------------|-------------------|------------|-----------------------|------------|--------------|" << endl;
    cout << "|     D      |      Burger Daging      |     RM 5.00       |     TC     |         Teh C         |   RM 4.50  |   RM 5.00    |" << endl;
    cout << "|------------|-------------------------|-------------------|------------|-----------------------|------------|--------------|" << endl;
    cout << "|     DT     |  Burger Daging + Telur  |     RM 6.00       |     LT     |       Lemon Tea       |   RM 4.50  |   RM 5.00    |" << endl;
    cout << "|------------|-------------------------|-------------------|----------------------------------------------------------------+" << endl;
    cout << "|     DTC    |  Burger Daging + Telur  |     RM 7.00       |" << endl;
    cout << "|            |       + Cheese          |                   |" << endl;
    cout << "|------------|-------------------------|-------------------|" << endl;
    cout << "|            |       [Spaghetti]       |                   |" << endl;
    cout << "|------------|-------------------------|-------------------|" << endl;
    cout << "|      C     |        Carbonara        |     RM 13.95      |" << endl;
    cout << "|------------|-------------------------|-------------------|" << endl;
    cout << "|      B     |        Bolognese        |     RM 13.95      |" << endl;
    cout << "+----------------------------------------------------------+" << endl;
    string name[100];
    double tprice = 0.0;
    int i = 0;
    Order(name, tprice, i);
    Output(name, tprice, i);
    Change(tprice);
}

// Function: Take Orders
void Order(string name[], double &tprice, int &i)
{
    string category, code, temp;
    int qty;
    double price;

    do
    {
        cout << "\nEnter category (FOOD / BEVERAGES) or type CONFIRM to finish: ";
        cin >> category;
        category = toUpperCase(category);

        if (category == "FOOD" || category == "BEVERAGES")
        {
            cout << "Enter code and quantity (or DONE to finish this category): " << endl;
            do
            {
                cout << "Code: ";
                cin >> code;
                code = toUpperCase(code);

                if (code == "DONE")
                    break;

                if (category == "FOOD")
                {
                    if (code == "A")      { name[i] = "Burger Ayam"; price = 5.00; }
                    else if (code == "AT") { name[i] = "Burger Ayam + Telur"; price = 6.00; }
                    else if (code == "ATC") { name[i] = "Burger Ayam + Telur + Cheese"; price = 7.00; }
                    else if (code == "D") { name[i] = "Burger Daging"; price = 5.00; }
                    else if (code == "DT") { name[i] = "Burger Daging + Telur"; price = 6.00; }
                    else if (code == "DTC") { name[i] = "Burger Daging + Telur + Cheese"; price = 7.00; }
                    else if (code == "C") { name[i] = "Spaghetti Carbonara"; price = 13.95; }
                    else if (code == "B") { name[i] = "Spaghetti Bolognese"; price = 13.95; }
                    else { cout << "Invalid food code. Try again." << endl; continue; }
                }
                else if (category == "BEVERAGES")
                {
                    if (code == "WJ") { name[i] = "Watermelon Juice"; price = 7.00; }
                    else if (code == "HJ") { name[i] = "Honeydew Juice"; price = 8.00; }
                    else if (code == "TC" || code == "LT")
                    {
                        cout << "Enter Hot or Cold: ";
                        cin >> temp;
                        temp = toUpperCase(temp);

                        if (temp == "HOT") { name[i] = (code == "TC" ? "Teh C Hot" : "Lemon Tea Hot"); price = 4.50; }
                        else if (temp == "COLD") { name[i] = (code == "TC" ? "Teh C Cold" : "Lemon Tea Cold"); price = 5.00; }
                        else { cout << "Invalid temperature. Try again." << endl; continue; }
                    }
                    else { cout << "Invalid beverage code. Try again." << endl; continue; }
                }
                else if (category == "CONFIRM"){
                    TotalPurchase(price);
                }
                else { cout << "Invalid category. Try again." << endl; continue; }

                cout << "Quantity: ";
                cin >> qty;
                tprice += price * qty;
                i++;
            } while (true);
        }
        else if (category != "CONFIRM")
        {
            cout << "Invalid category. Try again." << endl;
        }
    } while (category != "CONFIRM");
}

// Function: Calculate Total Purchase
void TotalPurchase(double &tprice)
{
    if (tprice > 40.0)
    {
        cout << fixed << setprecision(2);
        cout << "You have received a 10% discount!" << endl;
        tprice -= tprice * 0.1;
    }
}

// Function: Output Order Details
void Output(string name[], double tprice, int i)
{
    cout << "\n+--------------------------------+" << endl;
    cout << "| Order Details                  |" << endl;
    cout << "+--------------------------------+" << endl;

    for (int j = 0; j < i; j++)
    {
        cout << name[j] << endl;
    }

    TotalPurchase(tprice);
    cout << "\nTotal Price: RM " << fixed << setprecision(2) << tprice << endl;
}

// Function: Calculate Change
void Change(double &tprice)
{
    string paymentMethod;
    double payment, amt, change;

    cout << "\nEnter payment method (CASH / DEBIT): ";
    cin >> paymentMethod;
    paymentMethod = toUpperCase(paymentMethod);

    do{
    if (paymentMethod == "CASH" || paymentMethod == "DEBIT")
    {
        if (paymentMethod == "DEBIT" && tprice >= 30.0)
        {
            cout << "You have received a 5% debit discount!" << endl;
            tprice -= tprice * 0.05;
        }

        if (paymentMethod == "CASH")
        {
            cout << "\nEnter amount: RM";
            do
            {
                cin >> amt;
                if (amt < tprice)
                {
                    cout << "Money not enough to pay please enter again: RM";
                }
                else if (amt > tprice)
                {
                    change = amt - tprice;
                    if (change > 0.0)
                    {
                        cout << "\nYou have RM" << change << " change.";
                        cout << "Please go to counter to collect your change.";
                        break;
                    }
                }
                else if (amt = tprice)
                {
                    cout << "\n\aNo change to collect";
                    break;
                }
            } while (true);
            break;
        }
    }
    else
    {
        cout << "Invalid payment method. Try again." << endl;
    }
    }while(paymentMethod != "CASH" &&  paymentMethod != "DEBIT");
}

// Helper Function: Convert to Upper Case
string toUpperCase(const string &str)
{
    string result = str;
    for (char &ch : result)
    {
        ch = toupper(ch);
    }
    return result;
}
